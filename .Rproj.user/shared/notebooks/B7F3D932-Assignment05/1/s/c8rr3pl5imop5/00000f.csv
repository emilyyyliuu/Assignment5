"0","# Define the indicators to download"
"0","indicators = {"
"0","    'gdp_per_capita': 'NY.GDP.PCAP.CD',"
"0","    'gdp_growth_rate': 'NY.GDP.MKTP.KD.ZG',"
"0","    'inflation_rate': 'FP.CPI.TOTL.ZG',"
"0","    'unemployment_rate': 'SL.UEM.TOTL.ZS',"
"0","    'total_population': 'SP.POP.TOTL',"
"0","    'life_expectancy': 'SP.DYN.LE00.IN',"
"0","    'adult_literacy_rate': 'SE.ADT.LITR.ZS',"
"0","    'income_inequality': 'SI.POV.GINI',"
"0","    'health_expenditure_gdp_share': 'SH.XPD.CHEX.GD.ZS',"
"0","    'measles_immunisation_rate': 'SH.IMM.MEAS',"
"0","    'education_expenditure_gdp_share': 'SE.XPD.TOTL.GD.ZS',"
"0","    'primary_school_enrolment_rate': 'SE.PRM.ENRR',"
"0","    'exports_gdp_share': 'NE.EXP.GNFS.ZS'"
"0","}"
"0",""
"0","# Get the list of country codes for the ""World"" region"
"0","country_codes = wb.region.members('WLD')"
"0",""
"0","# Download data for countries only in 2022"
"0","df = wb.data.DataFrame(indicators.values(), economy=country_codes, time=2022, skipBlanks=True, labels=True).reset_index()"
"0",""
"0","# Delete the 'economy' column"
"0","df = df.drop(columns=['economy'], errors='ignore')"
"0",""
"0","# Create a reversed dictionary mapping indicator codes to names"
"0","# Rename the columns and convert all names to lowercase"
"0","df.rename(columns=lambda x: {v: k for k, v in indicators.items()}.get(x, x).lower(), inplace=True)"
"0",""
"0","# Sort 'country' in ascending order"
"0","df = df.sort_values('country', ascending=True)"
"0",""
"0","# Reset the index after sorting"
"0","df = df.reset_index(drop=True)"
"0",""
"0","# Display the number of rows and columns"
"0","print(df.shape)"
"0",""
"0","# Display the first few rows of the data"
"0","print(df.head(3))"
"0",""
"0","# Save the data to a CSV file"
"0","df.to_csv('wdi.csv', index=False)"
"0",""
